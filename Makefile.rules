# Set this to the drive you want to build for.
DRIVER := BLFA6
#DRIVER := MTN17DDm

# This makefile has the following useful targets:
# - build (the default) : just build the firmware.
# - flash : build the firmware and flash it to the MCU (does NOT include fuses).
# - check_link : check connection of AVR programmer.
# - show_eeprom : get eeprom content from MCU and show it.
# - verify_fuses : check MCU fuses against values wanted by the firmware.
# - flash_fuses : flash the MCU fuses to the values wanted by the firmware.
#
# BUGS
# - Include file dependencies are not tracked.

.PHONY: build asm clean flash check_link show_eeprom verify_fuses flash_fuses

# Include driver makefile definitions from same directory as this Makefile
include $(dir $(lastword $(MAKEFILE_LIST)))Makefile.$(DRIVER).defs

%.elf: %.c
	avr-gcc -mmcu=$(MCU_NAME) -Os -o $@ -DDRIVER=$(DRIVER) $<

%.s: %.c
	avr-gcc -mmcu=$(MCU_NAME) -Os -c -S -o $@ -DDRIVER=$(DRIVER) $<

%.hex: %.elf
	avr-size -C --mcu=$(MCU_NAME) $< && \
	avr-objcopy --remove-section=.fuse -O ihex $< $@

build: $(SOURCE:%.c=%.hex)

asm: $(SOURCE:%.c=%.s)

clean:
	rm -f $(SOURCE:%.c=%.elf) $(SOURCE:%.c=%.hex) $(SOURCE:%.c=%.s)

flash: $(SOURCE:%.c=%.hex)
	avrdude -p $(AVRDUDE_PART) -c usbasp -Uflash:w:$<:i

check_link:
	avrdude -p $(AVRDUDE_PART) -c usbasp -n

show_eeprom:
	avrdude -p $(AVRDUDE_PART) -c usbasp -Ueeprom:r:tmp-eeprom-dump.hex:r && \
	hexdump -C tmp-eeprom-dump.hex && \
	rm -f tmp-eeprom-dump.hex

# Note that these won't program the extended fuse byte of attiny25/45/85.
verify_fuses: $(SOURCE:%.c=%.elf)
	avrdude -p $(AVRDUDE_PART) -c usbasp -Ulfuse:v:$<:e -Uhfuse:v:$<:e

flash_fuses: $(SOURCE:%.c=%.elf)
	avrdude -p $(AVRDUDE_PART) -c usbasp -Ulfuse:w:$<:e -Uhfuse:w:$<:e
